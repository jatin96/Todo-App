{"ast":null,"code":"class AuthenticationService {\n  registerSuccessfulLogin(username, password) {\n    console.log('registerSuccessfulLogin');\n    sessionStorage.setItem('authenticatedUser', username);\n  }\n\n  logout() {\n    console.log('logged out successfully');\n    sessionStorage.removeItem('authenticatedUser');\n  }\n\n  isLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n\n    if (user === null) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getLoggedInUserName(username) {\n    return sessionStorage.getItem('authenticatedUser');\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["/home/jatin/Projects/todo-app/src/components/todo/AuthenticationService.js"],"names":["AuthenticationService","registerSuccessfulLogin","username","password","console","log","sessionStorage","setItem","logout","removeItem","isLoggedIn","user","getItem","getLoggedInUserName"],"mappings":"AAAA,MAAMA,qBAAN,CAA4B;AACxBC,EAAAA,uBAAuB,CAACC,QAAD,EAAUC,QAAV,EAAoB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAC,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA4CL,QAA5C;AAEH;;AACDM,EAAAA,MAAM,GAAG;AACLJ,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACAC,IAAAA,cAAc,CAACG,UAAf,CAA0B,mBAA1B;AACH;;AACDC,EAAAA,UAAU,GAAG;AACT,QAAIC,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAX;;AACA,QAAGD,IAAI,KAAK,IAAZ,EAAkB;AACd,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH;;AACDE,EAAAA,mBAAmB,CAACX,QAAD,EAAW;AAC1B,WAAOI,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAP;AACH;;AAnBuB;;AAsB5B,eAAe,IAAIZ,qBAAJ,EAAf","sourcesContent":["class AuthenticationService {\n    registerSuccessfulLogin(username,password) {\n        console.log('registerSuccessfulLogin')\n        sessionStorage.setItem('authenticatedUser', username);\n        \n    }\n    logout() {\n        console.log('logged out successfully')\n        sessionStorage.removeItem('authenticatedUser');\n    }\n    isLoggedIn() {\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user === null) {\n            return false\n        }\n        return true;\n    }\n    getLoggedInUserName(username) {\n        return sessionStorage.getItem('authenticatedUser')\n    }\n\n}\nexport default new AuthenticationService(); "]},"metadata":{},"sourceType":"module"}