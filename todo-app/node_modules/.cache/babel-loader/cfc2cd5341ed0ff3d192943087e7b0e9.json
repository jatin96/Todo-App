{"ast":null,"code":"var _jsxFileName = \"/home/jatin/Projects/todo-app/src/components/todo/LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService.js';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"jatin narula\",\n      password: \"\",\n      hasLoginFailed: false,\n      showSuccessMessage: false // this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\n      // this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\n\n    };\n    this.ChangeHandler = this.ChangeHandler.bind(this);\n    this.loginAuth = this.loginAuth.bind(this);\n  }\n\n  ChangeHandler(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    }); //  console.log(this.state)\n  } // passwordChangeHandler(event) {\n  //     console.log(\"password handler called\")\n  //     this.setState({password:event.target.value})\n  // } \n\n\n  loginAuth() {\n    console.log(this.state.username);\n\n    if (this.state.username === 'jatin' && this.state.password === 'narula') {\n      console.log(\"login successful\");\n      AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n      this.props.history.push(\"/welcome/\".concat(this.state.username)); // this.setState({showSuccessMessage : true})\n      // this.setState({hasLoginFailed : false})\n    } else {\n      console.log(\"login failed\");\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \" Login \"), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(ShowInvalidCredentials, {\n      hasLoginFailed: this.state.hasLoginFailed,\n      className: \"alert alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(ShowLoginSuccessMessage, {\n      showSuccessMessage: this.state.showSuccessMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), \"User Name : \", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.ChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), \"Password : \", React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.ChangeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.loginAuth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Login\")));\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["/home/jatin/Projects/todo-app/src/components/todo/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccessMessage","ChangeHandler","bind","loginAuth","event","setState","target","name","value","console","log","registerSuccessfulLogin","history","push","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport AuthenticationService from './AuthenticationService.js'\n\nclass LoginComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            username : \"jatin narula\",\n            password : \"\",\n            hasLoginFailed: false,\n            showSuccessMessage: false\n        }\n        // this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\n        // this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\n        this.ChangeHandler = this.ChangeHandler.bind(this);\n        this.loginAuth = this.loginAuth.bind(this);\n    }\n    ChangeHandler(event) {\n        this.setState({[event.target.name]:event.target.value})\n        //  console.log(this.state)\n    } \n    // passwordChangeHandler(event) {\n    //     console.log(\"password handler called\")\n    //     this.setState({password:event.target.value})\n    // } \n    loginAuth() {\n        console.log(this.state.username)\n        if(this.state.username === 'jatin' && this.state.password === 'narula') {\n            console.log(\"login successful\")\n            AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n            this.props.history.push(`/welcome/${this.state.username}`)\n            // this.setState({showSuccessMessage : true})\n            // this.setState({hasLoginFailed : false})\n\n        }\n        else {\n            console.log(\"login failed\")\n            this.setState({showSuccessMessage : false})\n            this.setState({hasLoginFailed : true})\n        }\n    }\n   \n    render() {\n        return (\n            <div>\n                <h1> Login </h1>\n                <div className=\"container\">\n                    <ShowInvalidCredentials hasLoginFailed={this.state.hasLoginFailed} className=\"alert alert-warning\"/>\n                    <ShowLoginSuccessMessage showSuccessMessage={this.state.showSuccessMessage} />\n                    User Name : <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.ChangeHandler}></input>\n                    Password : <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.ChangeHandler}></input>\n                    <button className=\"btn btn-success\" onClick={this.loginAuth}>Login</button>\n                </div>\n               \n            </div>\n            );\n    }  \n}\n\nexport default LoginComponent;"]},"metadata":{},"sourceType":"module"}